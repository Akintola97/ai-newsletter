// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum Frequency {
  DAILY
  BIWEEKLY
  MONTHLY
}

model User {
  id          String      @id @default(cuid())
  kindeId     String      @unique
  email       String      @unique
  name        String?
  createdAt   DateTime    @default(now())
  preferences Preference?
  deliveries  Delivery[]
}

model Preference {
  id     String @id @default(cuid())
  userId String @unique
  user   User   @relation(fields: [userId], references: [id])

  frequency  Frequency @default(DAILY)
  topics     String?
  lastSentAt DateTime?
  nextSendAt DateTime?

  paused Boolean @default(false)

  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}

model Issue {
  id         String     @id @default(cuid())
  createdAt  DateTime   @default(now())
  title      String
  html       String // rendered email html
  metaJson   String? // store links and summaries (JSON.stringify)
  deliveries Delivery[]
}

model Delivery {
  id      String   @id @default(cuid())
  userId  String
  user    User     @relation(fields: [userId], references: [id])
  issueId String
  issue   Issue    @relation(fields: [issueId], references: [id])
  sentAt  DateTime @default(now())
  status  String // "SENT", "FAILED"
  error   String?
}
