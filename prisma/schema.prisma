// generator client {
//   provider = "prisma-client-js"
//   output   = "../src/generated/prisma"
// }

// datasource db {
//   provider  = "postgresql"
//   url       = env("DATABASE_URL")
//   directUrl = env("DIRECT_URL")
// }

// model User {
//   id          String      @id @default(cuid())
//   kindeId     String      @unique
//   email       String      @unique
//   name        String?
//   createdAt   DateTime    @default(now())
//   deliveries  Delivery[]
//   preferences Preference?

//   @@index([createdAt])
// }

// model Preference {
//   id         String    @id @default(cuid())
//   userId     String    @unique
//   frequency  Frequency @default(DAILY)
//   topics     String?
//   lastSentAt DateTime?
//   nextSendAt DateTime?
//   updatedAt  DateTime  @updatedAt
//   createdAt  DateTime  @default(now())
//   paused     Boolean   @default(false)
//   user       User      @relation(fields: [userId], references: [id])

//   @@index([nextSendAt])
// }

// model Issue {
//   id         String     @id @default(cuid())
//   createdAt  DateTime   @default(now())
//   title      String
//   html       String
//   metaJson   String?
//   subject    String     @default("")
//   topics     String?
//   deliveries Delivery[]

//   @@index([createdAt])
// }

// model Delivery {
//   id        String   @id @default(cuid())
//   userId    String
//   issueId   String
//   sentAt    DateTime @default(now())
//   status    String
//   error     String?
//   subject   String   @default("")
//   toEmail   String?
//   toName    String?
//   createdAt DateTime @default(now())
//   topics    String?
//   issue     Issue    @relation(fields: [issueId], references: [id])
//   user      User     @relation(fields: [userId], references: [id])

//   @@index([userId, createdAt])
//   @@index([issueId, createdAt])
// }

// enum Frequency {
//   DAILY
//   BIWEEKLY
//   MONTHLY
// }




generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id          String      @id @default(cuid())
  kindeId     String      @unique
  email       String      @unique
  name        String?
  createdAt   DateTime    @default(now())
  deliveries  Delivery[]
  preferences Preference?

  @@index([createdAt])
}

model Preference {
  id         String    @id @default(cuid())
  userId     String    @unique
  frequency  Frequency @default(DAILY)
  topics     String?
  lastSentAt DateTime?
  nextSendAt DateTime?
  updatedAt  DateTime  @updatedAt
  createdAt  DateTime  @default(now())
  paused     Boolean   @default(false)
  user       User      @relation(fields: [userId], references: [id])

  @@index([nextSendAt])
}

model Issue {
  id         String     @id @default(cuid())
  createdAt  DateTime   @default(now())
  title      String
  html       String
  metaJson   String?
  subject    String     @default("")
  topics     String?
  deliveries Delivery[]

  @@index([createdAt])
}

model Delivery {
  id        String   @id @default(cuid())
  userId    String
  issueId   String
  sentAt    DateTime @default(now())
  status    String
  error     String?
  subject   String   @default("")
  toEmail   String?
  toName    String?
  createdAt DateTime @default(now())
  topics    String?
  issue     Issue    @relation(fields: [issueId], references: [id])
  user      User     @relation(fields: [userId], references: [id])

  @@index([userId, createdAt])
  @@index([issueId, createdAt])
}

enum Frequency {
  DAILY
  BIWEEKLY
  MONTHLY
}
